#include <Arduino.h>
#include <WiFi.h>
#include <WebSocketsServer.h>

// Настройки WiFi
const char* ssid = "ESP32-Access-Point";
const char* password = "12345678";

// PWM-параметры
const int pwmPin = 18;
int freq = 1000;
const int ledChannel = 0;
const int resolution = 8;

// WebSocket сервер
WebSocketsServer ws = WebSocketsServer(81);

void setup() {
  Serial.begin(115200);
  pinMode(pwmPin, OUTPUT);

  // Настройка PWM
  ledcSetup(ledChannel, freq, resolution);
  ledcAttachPin(pwmPin, ledChannel);
  ledcWrite(ledChannel, 127); // 50% duty cycle

  // Настройка WiFi в режиме точки доступа
  WiFi.softAP(ssid, password);
  Serial.println("Access Point started");
  Serial.print("IP address: ");
  Serial.println(WiFi.softAPIP());

  // Инициализация WebSocket
  initWebSocket();
}

void initWebSocket() {
  ws.onEvent(onEvent);
  ws.begin();
}

void onEvent(uint8_t num, WStype_t type, uint8_t *payload, size_t length) {
  switch (type) {
    case WStype_CONNECTED:
      Serial.printf("Client %d connected\n", num);
      ws.sendTXT(num, String(freq));
      break;
      
    case WStype_DISCONNECTED:
      Serial.printf("Client %d disconnected\n", num);
      break;
      
    case WStype_TEXT:
      String message = String((char*)payload);
      Serial.printf("Received from %d: %s\n", num, message.c_str());
      
      // Изменение частоты
      if (message.startsWith("SET_FREQ:")) {
        int newFreq = message.substring(9).toInt();
        freq = newFreq;
        ledcWriteTone(ledChannel, freq);
        Serial.printf("Frequency set to: %d Hz\n", freq);
        // Подтверждаем изменение частоты
        ws.sendTXT(num, String(freq));
      }
      break;
      
    default:
      break;
  }
}
initWebSocket();

void loop() {
  ws.loop();
}
